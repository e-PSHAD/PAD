{"version":3,"file":"myprogress.min.js","sources":["../src/myprogress.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Enhance detailed data (per top group and module) with summary data for each top group (platform).\n *\n * This returns a template context with all top groups. For each top group, it returns data for:\n * - summary display by status (coursesbystatus)\n * - detailed display (modules, as retrieved from backend)\n *\n * @param {object}  progress detailed progress data\n * @param {array}   STRINGS  map of i18n strings\n * @returns {object} topgroups context for local_padplusextensions/myprogress_content template\n */\n export function computeSummaryDataForTopGroups(progress, STRINGS) {\n    // Handle singular or plural labels for courses\n    const labelForStatus = (status, count = 1) => {\n        switch (status) {\n            case 'done':\n                return count > 1 ? STRINGS['course-done-plural'] : STRINGS['course-done'];\n            case 'inprogress':\n                return count > 1 ? STRINGS['course-inprogress-plural'] : STRINGS['course-inprogress'];\n            default:\n                return count > 1 ? STRINGS['course-todo-plural'] : STRINGS['course-todo'];\n        }\n    };\n\n    const topgroups = progress.map((topGroup) => {\n        // Perform a group-by reduction over modules and courses\n        const groupByStatus = topGroup.modules.reduce((groups, module) => {\n            module.courses.forEach((course) => {\n                groups[course.progress.status].push(course);\n            });\n            return groups;\n        }, {done: [], inprogress: [], todo: []});\n\n        // Now build summary context for each status group\n        const coursesbystatus = Object.entries(groupByStatus).map(([status, group]) => ({\n            status, // Useful for totalByStatus\n            count: group.length,\n            grouplabel: labelForStatus(status, group.length),\n            // Also rebuild specific context for course summary (single link-image)\n            courses: group.map(({fullname, viewurl, progress}) => ({\n                namestatuslabel: `${fullname} - ${labelForStatus(progress.status)}`,\n                viewurl,\n                progress\n            }))\n        }));\n\n        // Some last computation for top group display\n        const topGroupTotal = coursesbystatus.reduce((total, statusGroup) => total + statusGroup.count, 0);\n        const topgrouptotallabel = `${topGroupTotal} ${topGroupTotal > 1 ? STRINGS['course-plural'] : STRINGS['course-singular']}`;\n\n        // Return top group context for display\n        return {\n            topgroupid: topGroup.id,\n            topgroupname: topGroup.name,\n            topgrouptotallabel,\n            modules: topGroup.modules, // Modules context is already ok for display\n            coursesbystatus\n        };\n    });\n\n    return {\n        topgroups\n    };\n}\n\n/**\n * Compute course totals by todo|inprogress|done status from summary data.\n * See also PHP function compute_total_courses_by_status.\n *\n * @param {object} data summary data for each top group with coursesbystatus\n * @return {object} data context for local_padplusextensions/myprogress_short_summary template\n */\nexport function computeTotalCoursesByStatus(data) {\n    const totalByStatus = data.topgroups.reduce((totals, topgroup) => {\n        topgroup.coursesbystatus.forEach((statusGroup) => {\n            const newTotal = totals[statusGroup.status].count + statusGroup.count;\n            totals[statusGroup.status] = {\n                count: newTotal,\n                hasmany: newTotal > 1\n            };\n        });\n        return totals;\n    }, {done: {count: 0, hasmany: false}, inprogress: {count: 0, hasmany: false}, todo: {count: 0, hasmany: false}});\n\n    const total = totalByStatus.done.count + totalByStatus.inprogress.count + totalByStatus.todo.count;\n    totalByStatus.total = {\n        count: total,\n        hasmany: total > 1\n    };\n\n    return {\n        totalByStatus\n    };\n}\n"],"names":["progress","STRINGS","labelForStatus","status","count","topgroups","map","topGroup","groupByStatus","modules","reduce","groups","module","courses","forEach","course","push","done","inprogress","todo","coursesbystatus","Object","entries","group","length","grouplabel","fullname","viewurl","namestatuslabel","topGroupTotal","total","statusGroup","topgrouptotallabel","topgroupid","id","topgroupname","name","data","totalByStatus","totals","topgroup","newTotal","hasmany"],"mappings":"4UA0BgDA,SAAUC,aAEhDC,eAAiB,SAACC,YAAQC,6DAAQ,SAC5BD,YACC,cACMC,MAAQ,EAAIH,QAAQ,sBAAwBA,QAAQ,mBAC1D,oBACMG,MAAQ,EAAIH,QAAQ,4BAA8BA,QAAQ,oCAE1DG,MAAQ,EAAIH,QAAQ,sBAAwBA,QAAQ,uBAwChE,CACHI,UArCcL,SAASM,KAAI,SAACC,cAEtBC,cAAgBD,SAASE,QAAQC,QAAO,SAACC,OAAQC,eACnDA,OAAOC,QAAQC,SAAQ,SAACC,QACpBJ,OAAOI,OAAOf,SAASG,QAAQa,KAAKD,WAEjCJ,SACR,CAACM,KAAM,GAAIC,WAAY,GAAIC,KAAM,KAG9BC,gBAAkBC,OAAOC,QAAQd,eAAeF,KAAI,g9BAAEH,gBAAQoB,qBAAY,CAC5EpB,OAAAA,OACAC,MAAOmB,MAAMC,OACbC,WAAYvB,eAAeC,OAAQoB,MAAMC,QAEzCX,QAASU,MAAMjB,KAAI,oBAAEoB,eAAAA,SAAUC,cAAAA,QAAS3B,eAAAA,eAAe,CACnD4B,0BAAoBF,uBAAcxB,eAAeF,SAASG,SAC1DwB,QAAAA,QACA3B,SAAAA,iBAKF6B,cAAgBT,gBAAgBV,QAAO,SAACoB,MAAOC,oBAAgBD,MAAQC,YAAY3B,QAAO,GAC1F4B,6BAAwBH,0BAAiBA,cAAgB,EAAI5B,QAAQ,iBAAmBA,QAAQ,0BAG/F,CACHgC,WAAY1B,SAAS2B,GACrBC,aAAc5B,SAAS6B,KACvBJ,mBAAAA,mBACAvB,QAASF,SAASE,QAClBW,gBAAAA,oEAgBgCiB,UAClCC,cAAgBD,KAAKhC,UAAUK,QAAO,SAAC6B,OAAQC,iBACjDA,SAASpB,gBAAgBN,SAAQ,SAACiB,iBACxBU,SAAWF,OAAOR,YAAY5B,QAAQC,MAAQ2B,YAAY3B,MAChEmC,OAAOR,YAAY5B,QAAU,CACzBC,MAAOqC,SACPC,QAASD,SAAW,MAGrBF,SACR,CAACtB,KAAM,CAACb,MAAO,EAAGsC,SAAS,GAAQxB,WAAY,CAACd,MAAO,EAAGsC,SAAS,GAAQvB,KAAM,CAACf,MAAO,EAAGsC,SAAS,KAElGZ,MAAQQ,cAAcrB,KAAKb,MAAQkC,cAAcpB,WAAWd,MAAQkC,cAAcnB,KAAKf,aAC7FkC,cAAcR,MAAQ,CAClB1B,MAAO0B,MACPY,QAASZ,MAAQ,GAGd,CACHQ,cAAAA"}